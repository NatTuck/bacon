/* -*- c -*- */

int
add_ints(int a, int b)
{ // one line comment
    int c = a + b;
    return c;
}

/*
 * Multi-line comment
 */

kernel
Array2D<int>
add(Array2D<int> aa, Array2D<int> bb) 
{
 SETUP:
    global Array2D<int> cc[aa.rows, aa.cols];

 BODY:
    @range [aa.rows];

    for (int ii = 0; ii < aa.cols; ++ii) {
        cc[$x, ii] = add_ints(aa[$x, ii], bb[$x, ii]);
    }

    return cc;
}

kernel
Array2D<double>
add_doubles(Array2D<double> aa, Array2D<double> bb) 
{
 SETUP:
    global Array2D<double> cc[aa.rows, aa.cols];

 BODY:
    @range [aa.rows];

    for (int ii = 0; ii < aa.cols; ++ii) {
        cc[$x, ii] = aa[$x, ii] + bb[$x, ii];
    }

    return cc;
}

kernel
Array<int>
sum_take_pos(Array2D<int> aa)
{
 SETUP:
    Array<int> sums[aa.cols];

 BODY:
    @range [aa.rows];

    int ii  = 0;
    int sum = 0;

    while (aa[$col, ii] >= 0 && ii < aa.cols) {
        sum += aa[$col, ii];
        ii  += 1;
    }

    sums[$col] = sum;

    return sums;
}
