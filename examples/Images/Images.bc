/* -*- c -*- */

kernel
Image2D<uchar>
show_indexes(const int rows, const int cols)
{
 SETUP:
    global Image2D<uchar> image[rows, cols];

 BODY:
    @range [rows, cols];

    int val = 100;

    val += $y * 10;
    val += $x * 1;

    image[$y, $x] = val;

    return image;
}

kernel
Array2D<uchar>
copy_to_array(Image2D<uchar> image)
{
 SETUP:
    global Array2D<uchar> arry[image.rows, image.cols];

 BODY:
    @range [image.rows, image.cols];

    arry[$y, $x] = image[$y, $x];
    
    return arry;
}

kernel
Image2D<ulong>
add_ten_long(Image2D<ulong> aa)
{
 SETUP:
    Image2D<ulong> bb[aa.rows, aa.cols];

 BODY:
    @range [aa.rows, aa.cols];

    bb[$y, $x] = aa[$y, $x] + 10;
 
    return bb;
}

kernel
Image3D<uchar>
write_image3D(const int nn)
{
 SETUP:
    Image3D<uchar> image[nn, nn, nn];

 BODY:
    @range [image.deep, image.rows, image.cols];

    image[$dep, $row, $col] = $col;

    return image;
}

kernel
Array<int>
sum_image3D_cols(Image3D<uchar> image, const int nn)
{
 SETUP:
    Array<int> sums[nn];

 BODY:
    @range [nn];

    sums[$col] = 0;

    for (int ii = 0; ii < nn; ++ii) {
        for (int jj = 0; jj < nn; ++jj) {
            sums[$col] += image[ii, jj, $col];
        }
    }

    return sums;
}
